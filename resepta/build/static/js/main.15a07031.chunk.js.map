{"version":3,"sources":["App.js","serviceWorker.js","ListItems.js","index.js","logo.svg"],"names":["App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ListItem","props","handleButton","type","setState","renderHome","handleModal","results","visible","img_src","judul","namaresep","bahan","listData","axios","method","url","headers","accept","data","this","className","onClick","class","style","fontSize","fontWeight","color","fontFamily","src","title","centered","onOk","onCancel","width","textAlign","rowSpan","alt","map","key","id","margin","borderColor","borderRadius","backgroundColor","Component","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.15a07031.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport './ListItems.css';\r\n\r\nexport default class ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n      renderHome: true,\r\n      visible: false,\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  handleButton = (type) => {\r\n    this.setState({\r\n      renderHome: type,\r\n  });\r\n};\r\n  handleModal = (results) => {\r\n    this.setState({\r\n      visible: true,\r\n      img_src: results.img_src,\r\n      judul: results.namaresep,\r\n      bahan: results.bahan,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"https://api.npoint.io/e45f5677beac6ae69f5c\",\r\n      headers: {\r\n        accept: \"*/*\",\r\n      },\r\n    })\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        this.setState({\r\n            listData: data.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.renderHome)\r\n    return (\r\n      <div>\r\n        <div className=\"topnav\">\r\n\r\n          <button\r\n            onClick={() => this.setState({ renderHome: false })}\r\n          >Resep</button>\r\n          <button\r\n            class=\"active\"\r\n            onClick={() => this.setState({ renderHome: true })}\r\n          >About</button>\r\n        </div>\r\n        <center><h2>\r\n          <p style={{ fontSize: 20, fontWeight: 'bold', color: '#8B4513', fontFamily: 'Segoe UI' }}>Tentang Penyusun</p>\r\n          <img src={'./profil.jpg'} ></img>\r\n          <p style={{ fontSize: 20, fontWeight: 'bold', color: '#8B4513', fontFamily: 'Segoe UI' }}>Ichsan Arsyi Putra</p>\r\n          <p style={{ fontSize: 16, fontWeight: 'bold', color: '#8B4513', fontFamily: 'Segoe UI' }}>21120118120029</p>\r\n\r\n        </h2></center>\r\n      </div>\r\n    );\r\n\r\n    else\r\n    return (\r\n      <div>\r\n        <div className=\"topnav\">\r\n        <button\r\n              class=\"active\"\r\n              onClick={() => this.handleButton(false)}\r\n            >Resep</button>\r\n            <button\r\n              onClick={() => this.handleButton(true)}\r\n            >About</button>\r\n          </div>\r\n\r\n          <div className=\"boxRed\">\r\n          <center>\r\n            <h1 style={{ fontWeight: \"bolder\", fontSize: 50, color: '#8B4513' }}>My Pocket Recipes</h1>\r\n          </center>\r\n          <Modal\r\n            title=\"My Pocket Recipes\"\r\n            centered\r\n            visible={this.state.visible}\r\n            onOk={() => this.setState({ visible: false })}\r\n            onCancel={() => this.setState({ visible: false })}\r\n            width={500}\r\n          >\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <center><td rowSpan=\"8\"><img src={this.state.img_src} alt=\"resep\" width=\"128px\" /></td></center>\r\n                <p style={{ fontSize: 20, fontWeight: 'bold', fontFamily: 'Segoe UI' }}>{this.state.judul}</p>\r\n                <p style={{ fontSize: 15, fontFamily: 'Segoe UI' }}>bahan:  {this.state.bahan}</p>\r\n            </div>\r\n          </Modal>\r\n\r\n           {this.state.listData.map((results) => {\r\n            return (\r\n              <div className=\"card\" key={results.id}style={{ margin: 40 }}>\r\n                <div className=\"card-body\">\r\n                  <center><td rowSpan=\"8\"><img src={results.img_src} alt=\"resep\" width=\"128px\" /></td> </center>\r\n                  <center><h6 className=\"card-title\">{results.namaresep}</h6></center>                       \r\n                </div>\r\n                <button\r\n                style={{ borderColor: 'transparent', borderRadius: 10, backgroundColor: '#A0522D', color: 'white' }}\r\n                  className=\"button\"\r\n                  onClick={() => this.handleModal(results)}\r\n                >\r\n                  {\" \"}\r\n                  Detail Bahan\r\n                </button>\r\n              </div>\r\n            );\r\n          })} \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport ListItem from './ListItems';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n<ListItem />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}